import tkinter as tk
from tkinter import filedialog, messagebox
from PIL import Image

class ImageCompressorApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Image Compressor")

        # Create GUI components
        self.create_widgets()

    def create_widgets(self):
        # Load Image Button
        self.load_button = tk.Button(self.root, text="Load Image", command=self.load_image)
        self.load_button.pack(pady=10)

        # Quality Label and Scale
        self.quality_label = tk.Label(self.root, text="Quality (1-100):")
        self.quality_label.pack(pady=5)
        self.quality_scale = tk.Scale(self.root, from_=1, to_=100, orient="horizontal")
        self.quality_scale.set(75)  # Default quality
        self.quality_scale.pack(pady=5)

        # Compress Button
        self.compress_button = tk.Button(self.root, text="Compress and Save", command=self.compress_image)
        self.compress_button.pack(pady=10)

    def load_image(self):
        self.filepath = filedialog.askopenfilename(filetypes=[("Image files", "*.png;*.jpg;*.jpeg")])
        if self.filepath:
            self.image = Image.open(self.filepath)
            messagebox.showinfo("Image Loaded", "Image loaded successfully!")

    def compress_image(self):
        if not hasattr(self, 'image'):
            messagebox.showwarning("No Image", "Please load an image first.")
            return

        quality = self.quality_scale.get()
        save_path = filedialog.asksaveasfilename(defaultextension=".jpg",
                                               filetypes=[("JPEG files", "*.jpg;*.jpeg")])
        if save_path:
            self.image.save(save_path, "JPEG", quality=quality)
            messagebox.showinfo("Success", "Image compressed and saved successfully!")

if __name__ == "__main__":
    root = tk.Tk()
    app = ImageCompressorApp(root)
    root.mainloop()
